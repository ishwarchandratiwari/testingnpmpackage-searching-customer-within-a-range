{"ast":null,"code":"const customersList = require('../public/customers.json');\n\nconst defaultConfiguration = require('./defaultConfiguration');\n\nconst getDistanceFromLatLonInKm = require('./distanceCalculator');\n\njsonSort(customersList);\nvar eligibleCustomersList = [];\nmodule.exports = {\n  searchingCustomers: async function () {\n    customersList.filter(function (customer) {\n      var filteredData = calculateDistance(defaultConfiguration.sourceCoordinates.latitude, defaultConfiguration.sourceCoordinates.longitude, customer.latitude, customer.longitude, defaultConfiguration.distance);\n      return filteredData ? pushData(customer) : '';\n    });\n    return eligibleCustomersList ? eligibleCustomersList : '';\n  }\n};\n\nfunction pushData(customer) {\n  eligibleCustomersList.push({\n    \"name\": customer.name,\n    \"user_id\": customer.user_id\n  });\n}\n\nfunction jsonSort(list) {\n  list.sort(function (a, b) {\n    return a.user_id - b.user_id;\n  });\n}\n\nfunction calculateDistance(originLat, originLon, customerLat, customerLon, distance) {\n  return getDistanceFromLatLonInKm(originLat, originLon, customerLat, customerLon, distance);\n}","map":{"version":3,"sources":["/Users/ishwar/Desktop/npm/testingnpmpackage-searching-customer-within-a-range/node_modules/searching-customer-within-a-range/src/index.js"],"names":["customersList","require","defaultConfiguration","getDistanceFromLatLonInKm","jsonSort","eligibleCustomersList","module","exports","searchingCustomers","filter","customer","filteredData","calculateDistance","sourceCoordinates","latitude","longitude","distance","pushData","push","name","user_id","list","sort","a","b","originLat","originLon","customerLat","customerLon"],"mappings":"AAAA,MAAMA,aAAa,GAAmBC,OAAO,CAAC,0BAAD,CAA7C;;AACA,MAAMC,oBAAoB,GAAYD,OAAO,CAAC,wBAAD,CAA7C;;AACA,MAAME,yBAAyB,GAAOF,OAAO,CAAC,sBAAD,CAA7C;;AAEAG,QAAQ,CAACJ,aAAD,CAAR;AACA,IAAIK,qBAAqB,GAAC,EAA1B;AACAC,MAAM,CAACC,OAAP,GAAgB;AACZC,EAAAA,kBAAkB,EAAE,kBAAgB;AAChCR,IAAAA,aAAa,CAACS,MAAd,CAAsB,UAASC,QAAT,EAAkB;AACrC,UAAIC,YAAY,GAAEC,iBAAiB,CAE9BV,oBAAoB,CAACW,iBAArB,CAAuCC,QAFT,EAG9BZ,oBAAoB,CAACW,iBAArB,CAAuCE,SAHT,EAI9BL,QAAQ,CAACI,QAJqB,EAK9BJ,QAAQ,CAACK,SALqB,EAM9Bb,oBAAoB,CAACc,QANS,CAAnC;AAQC,aAAQL,YAAD,GAAeM,QAAQ,CAACP,QAAD,CAAvB,GAAkC,EAAzC;AACH,KAVD;AAWA,WAAQL,qBAAD,GAAwBA,qBAAxB,GAA8C,EAArD;AACH;AAdW,CAAhB;;AAiBA,SAASY,QAAT,CAAkBP,QAAlB,EAA2B;AACvBL,EAAAA,qBAAqB,CAACa,IAAtB,CAA2B;AAAC,YAAOR,QAAQ,CAACS,IAAjB;AAAsB,eAAUT,QAAQ,CAACU;AAAzC,GAA3B;AACH;;AACD,SAAShB,QAAT,CAAkBiB,IAAlB,EAAuB;AACnBA,EAAAA,IAAI,CAACC,IAAL,CAAU,UAASC,CAAT,EAAYC,CAAZ,EAAc;AACpB,WAAOD,CAAC,CAACH,OAAF,GAAYI,CAAC,CAACJ,OAArB;AACH,GAFD;AAGH;;AAED,SAASR,iBAAT,CAA2Ba,SAA3B,EAAsCC,SAAtC,EAAiDC,WAAjD,EAA8DC,WAA9D,EAA0EZ,QAA1E,EAAmF;AAC/E,SAAQb,yBAAyB,CAACsB,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoCC,WAApC,EAAgDZ,QAAhD,CAAjC;AACH","sourcesContent":["const customersList                 = require('../public/customers.json');\nconst defaultConfiguration          = require('./defaultConfiguration');\nconst getDistanceFromLatLonInKm     = require('./distanceCalculator');\n\njsonSort(customersList);\nvar eligibleCustomersList=[]\nmodule.exports ={\n    searchingCustomers: async function(){\n        customersList.filter( function(customer){\n           var filteredData= calculateDistance\n            (\n                defaultConfiguration.sourceCoordinates.latitude,\n                defaultConfiguration.sourceCoordinates.longitude,\n                customer.latitude,\n                customer.longitude,\n                defaultConfiguration.distance\n            )\n            return (filteredData)?pushData(customer):''\n        });\n        return (eligibleCustomersList)?eligibleCustomersList:'';\n    }\n}\n\nfunction pushData(customer){\n    eligibleCustomersList.push({\"name\":customer.name,\"user_id\":customer.user_id});\n}\nfunction jsonSort(list){\n    list.sort(function(a, b){\n        return a.user_id - b.user_id;\n    });\n}\n\nfunction calculateDistance(originLat, originLon, customerLat, customerLon,distance){\n    return  getDistanceFromLatLonInKm(originLat, originLon, customerLat, customerLon,distance);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"script"}